/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package iotbroker;

import iotpackage.AC;
import iotpackage.Command;
import iotpackage.IoTAction;
import iotpackage.IoTDevice;
import iotpackage.LightDevice;
import iotpackage.Message;
import iotpackage.Television;
import java.awt.Color;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.ServerSocket;
import java.net.Socket;
import java.net.SocketException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JSlider;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;

/**
 *
 * @author davi
 */
public class Gui extends javax.swing.JFrame {

    /**
     * Creates new form Gui
     */
    HashMap<String, IoTDevice> devices;
    HashMap<String, Socket> devicesSocket;
    Socket acSocket,tvSocket, luzSocket; //nós da rede
    AC ac;
    Television tv;
    LightDevice luz;
    
    public Gui() {
        initComponents();
        devices = new HashMap();
        devicesSocket = new HashMap();
        Thread serverThread = new Thread(new Runnable() {
            @Override
            public void run() {
                try {
                    serverGateway();
                } catch (IOException ex) {
                    Logger.getLogger(Gui.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
        serverThread.start();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        AC1Panel = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jtfEnderecoAC = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jtfPortaAC = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        btnConectar = new javax.swing.JButton();
        AC1Panel1 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jtfEnderecoTV = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jtfPortaTV = new javax.swing.JTextField();
        AC1Panel2 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jtfEnderecoLuz = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jtfPortaLuz = new javax.swing.JTextField();
        txtACStatus = new javax.swing.JLabel();
        txtTVStatus = new javax.swing.JLabel();
        txtLuzStatus = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel3.setFont(new java.awt.Font("Ubuntu", 1, 36)); // NOI18N
        jLabel3.setText("Gateway");

        jLabel1.setText("Ar condicionado:");

        AC1Panel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel2.setText("Endereço:");

        jtfEnderecoAC.setText("localhost");
        jtfEnderecoAC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfEnderecoACActionPerformed(evt);
            }
        });

        jLabel8.setText("Porta:");

        jtfPortaAC.setText("9001");

        javax.swing.GroupLayout AC1PanelLayout = new javax.swing.GroupLayout(AC1Panel);
        AC1Panel.setLayout(AC1PanelLayout);
        AC1PanelLayout.setHorizontalGroup(
            AC1PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AC1PanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(AC1PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(AC1PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jtfEnderecoAC)
                    .addGroup(AC1PanelLayout.createSequentialGroup()
                        .addComponent(jtfPortaAC, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 63, Short.MAX_VALUE)))
                .addContainerGap())
        );
        AC1PanelLayout.setVerticalGroup(
            AC1PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AC1PanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(AC1PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jtfEnderecoAC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(AC1PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfPortaAC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        jLabel4.setText("Televisão:");

        jLabel6.setText("Luz:");

        btnConectar.setText("Conectar");
        btnConectar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConectarActionPerformed(evt);
            }
        });

        AC1Panel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel9.setText("Endereço:");

        jtfEnderecoTV.setText("localhost");

        jLabel10.setText("Porta:");

        jtfPortaTV.setText("9092");

        javax.swing.GroupLayout AC1Panel1Layout = new javax.swing.GroupLayout(AC1Panel1);
        AC1Panel1.setLayout(AC1Panel1Layout);
        AC1Panel1Layout.setHorizontalGroup(
            AC1Panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AC1Panel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(AC1Panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(AC1Panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jtfEnderecoTV)
                    .addGroup(AC1Panel1Layout.createSequentialGroup()
                        .addComponent(jtfPortaTV, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 63, Short.MAX_VALUE)))
                .addContainerGap())
        );
        AC1Panel1Layout.setVerticalGroup(
            AC1Panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AC1Panel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(AC1Panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jtfEnderecoTV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(AC1Panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfPortaTV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        AC1Panel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel11.setText("Endereço:");

        jtfEnderecoLuz.setText("localhost");
        jtfEnderecoLuz.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfEnderecoLuzActionPerformed(evt);
            }
        });

        jLabel12.setText("Porta:");

        jtfPortaLuz.setText("9090");

        javax.swing.GroupLayout AC1Panel2Layout = new javax.swing.GroupLayout(AC1Panel2);
        AC1Panel2.setLayout(AC1Panel2Layout);
        AC1Panel2Layout.setHorizontalGroup(
            AC1Panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AC1Panel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(AC1Panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(AC1Panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jtfEnderecoLuz)
                    .addGroup(AC1Panel2Layout.createSequentialGroup()
                        .addComponent(jtfPortaLuz, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 63, Short.MAX_VALUE)))
                .addContainerGap())
        );
        AC1Panel2Layout.setVerticalGroup(
            AC1Panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AC1Panel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(AC1Panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(jtfEnderecoLuz, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(AC1Panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfPortaLuz, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        txtACStatus.setFont(new java.awt.Font("Ubuntu", 1, 14)); // NOI18N
        txtACStatus.setForeground(new java.awt.Color(193, 15, 8));
        txtACStatus.setText("Desconectado");

        txtTVStatus.setFont(new java.awt.Font("Ubuntu", 1, 14)); // NOI18N
        txtTVStatus.setForeground(new java.awt.Color(193, 15, 8));
        txtTVStatus.setText("Desconectado");

        txtLuzStatus.setFont(new java.awt.Font("Ubuntu", 1, 14)); // NOI18N
        txtLuzStatus.setForeground(new java.awt.Color(193, 15, 8));
        txtLuzStatus.setText("Desconectado");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addGap(215, 215, 215))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtLuzStatus)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtACStatus))
                            .addComponent(AC1Panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 51, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtTVStatus))
                            .addComponent(AC1Panel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(90, 90, 90))))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(243, 243, 243)
                        .addComponent(btnConectar))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(AC1Panel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel4)
                            .addComponent(txtACStatus)
                            .addComponent(txtTVStatus))
                        .addGap(12, 12, 12)
                        .addComponent(AC1Panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(AC1Panel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtLuzStatus))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(AC1Panel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                .addComponent(btnConectar)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnConectarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConectarActionPerformed
        
        try {
            //Conectar a todos os nos da rede
            acSocket = new Socket(jtfEnderecoAC.getText(), //endereco
                    Integer.parseInt(jtfPortaAC.getText()));  //porta
            
            
            tvSocket = new Socket(jtfEnderecoTV.getText(), //endereco
                    Integer.parseInt(jtfPortaTV.getText()));  //porta
            
            luzSocket = new Socket(jtfEnderecoLuz.getText(), //endereco
                    Integer.parseInt(jtfPortaLuz.getText()));   //porta
        } catch (IOException ex) {
            Logger.getLogger(Gui.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        if(tvSocket != null){
            txtTVStatus.setText("Conectado");
            txtTVStatus.setForeground(Color.GREEN);
            
            try {
                tv = (Television) getDeviceInfo(tvSocket);
                devices.put(tv.getDeviceName(),tv);
                devicesSocket.put(tv.getDeviceName(), tvSocket);
            } catch (IOException ex) {
                Logger.getLogger(Gui.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(Gui.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }
        if(luzSocket != null){
            try {
                txtLuzStatus.setText("Conectado");
                txtLuzStatus.setForeground(Color.GREEN);
                
                luz = (LightDevice) getDeviceInfo(luzSocket);
                devices.put(luz.getDeviceName(),luz);
                devicesSocket.put(luz.getDeviceName(), luzSocket);
            } catch (IOException ex) {
                Logger.getLogger(Gui.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(Gui.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        if(acSocket != null){
            try {
                txtACStatus.setText("Conectado");
                txtACStatus.setForeground(Color.GREEN);
                
                ac = (AC) getDeviceInfo(acSocket);
                devices.put(ac.getDeviceName(),ac);
                devicesSocket.put(ac.getDeviceName(), acSocket);
            } catch (IOException ex) {
                Logger.getLogger(Gui.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(Gui.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
        
    }//GEN-LAST:event_btnConectarActionPerformed

    private void jtfEnderecoACActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfEnderecoACActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfEnderecoACActionPerformed

    private void jtfEnderecoLuzActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfEnderecoLuzActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfEnderecoLuzActionPerformed

    public String sendData(IoTAction action) throws IOException, ClassNotFoundException{
        Socket socket = new Socket("localhost",9001);
        ObjectOutputStream outToServer = new ObjectOutputStream(socket.getOutputStream());
        ObjectInputStream inFromServer = new ObjectInputStream(socket.getInputStream());
        outToServer.writeObject(action);
        String resp = (String) inFromServer.readObject();
        return resp;
    }
    
    public void serverGateway() throws IOException{
        ServerSocket myServer = new ServerSocket(9002);
        while(true){
            Socket clientSocket = myServer.accept();
            System.out.println("Conectado com android");
            //get streams
            ObjectInputStream inFromClient = new ObjectInputStream(clientSocket.getInputStream());
            ObjectOutputStream outToClient = new ObjectOutputStream(clientSocket.getOutputStream());

            outToClient.writeObject(new Message("OK","Welcome."));
            for(IoTDevice d : devices.values()){
                outToClient.writeObject(new Message("deviceType",d.getDeviceType() + ""));
                outToClient.flush();
                outToClient.writeObject(new Message("deviceName",d.getDeviceName() ));
                outToClient.flush();
                outToClient.writeObject(new Message("deviceName",d.getDeviceDescription() ));
                outToClient.flush();
            }
            outToClient.writeObject(new Message("END","End"));

            while(true){
                try {
                    listenForCommands(inFromClient,outToClient);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(Gui.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            
        
        
        
        }
    }
    
    private void listenForCommands(ObjectInputStream in, ObjectOutputStream out) throws IOException, ClassNotFoundException {
        Command command = (Command) in.readObject();
        String deviceName = command.getDeviceName();
        IoTAction action = command.getAction();
        Socket deviceSocket = devicesSocket.get(deviceName);
        
        ObjectInputStream deviceIn = new ObjectInputStream(deviceSocket.getInputStream());
        ObjectOutputStream deviceOut = new ObjectOutputStream(deviceSocket.getOutputStream());
        deviceOut.writeObject(action);
        
        Message responseFromDevice = (Message) deviceIn.readObject();
        System.out.println(responseFromDevice);
        
        
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Gui().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel AC1Panel;
    private javax.swing.JPanel AC1Panel1;
    private javax.swing.JPanel AC1Panel2;
    private javax.swing.JButton btnConectar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField jtfEnderecoAC;
    private javax.swing.JTextField jtfEnderecoLuz;
    private javax.swing.JTextField jtfEnderecoTV;
    private javax.swing.JTextField jtfPortaAC;
    private javax.swing.JTextField jtfPortaLuz;
    private javax.swing.JTextField jtfPortaTV;
    private javax.swing.JLabel txtACStatus;
    private javax.swing.JLabel txtLuzStatus;
    private javax.swing.JLabel txtTVStatus;
    // End of variables declaration//GEN-END:variables

    private IoTDevice getDeviceInfo(Socket iotsocket) throws IOException, ClassNotFoundException {
        ObjectOutputStream out = new ObjectOutputStream(iotsocket.getOutputStream());
        ObjectInputStream in = new ObjectInputStream(iotsocket.getInputStream());
        
        out.writeObject(new IoTAction(IoTAction.SEND_DEVICE_INFO));
        //resposta do equipamento
        Message deviceType = (Message) in.readObject();
        Message deviceName = (Message) in.readObject();
        Message deviceDescription = (Message) in.readObject();
        if(deviceType.getMessage().equals(IoTDevice.AC + "")){
            return new AC(deviceName.getMessage(),deviceDescription.getMessage());
        }
        else if(deviceType.getMessage().equals(IoTDevice.Television + "")){
            return new Television(deviceName.getMessage(),deviceDescription.getMessage());
        }
        else if(deviceType.getMessage().equals(IoTDevice.Light + "")){
            return new LightDevice(deviceName.getMessage(),deviceDescription.getMessage());
        }
        else{
            throw new ClassNotFoundException("Not suitable device.");
        }
        
    }

}
