/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package iotbroker.devices;

import iotpackage.AC;
import iotpackage.IoTAction;
import iotpackage.Message;
import iotpackage.OnACValueChange;
import java.awt.Color;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.ServerSocket;
import java.net.Socket;
import java.util.logging.Level;
import java.util.logging.Logger;
import iotpackage.OnDeviceStateChange;

/**
 *
 * @author davi
 */
public class ArCondicionadoFrame extends javax.swing.JFrame {

    /**
     * Creates new form ArCondicionadoFrame
     */
    AC ac; //ar condicionado
    
    public ArCondicionadoFrame() {
        initComponents();
        ac = new AC("Ar condicionado", "Ar condicionado virtual, para testes de IoT.");
        ac.setCallback(new OnACValueChange() {
            @Override
            public void temperatureChanged(int newValue) {
                txtTemp.setText(newValue + "");
            }

            @Override
            public void deviceStateChanged(boolean newValue) {
                if(newValue){
                    txtStatus.setText("LIGADO");
                    txtStatus.setForeground(Color.GREEN);                    
                }
                else {
                    txtStatus.setText("DESLIGADO");
                    txtStatus.setForeground(Color.RED);
                }                    
            }
        });
        
        
        //threads
        Runnable server = new Runnable() {
            @Override
            public void run() {
                try {
                    serverStuff();
                } catch (IOException ex) {
                    Logger.getLogger(ArCondicionadoFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        };
        
        Thread serverThread = new Thread(server);
        serverThread.start();
        
        if(ac.isDeviceOn()){
            txtStatus.setText("LIGADO");
            txtStatus.setForeground(Color.GREEN);
        }
        else{
            txtStatus.setText("DESLIGADO");
            txtStatus.setForeground(Color.RED);
        }
        txtTemp.setText(ac.getDesiredTemp() + "");
        
    }
    
    public void serverStuff() throws IOException{
        ServerSocket server = new ServerSocket(9001);
        System.out.println("Server started.");
        while(true){
            //wait for gateway to connect
            Socket gatewaySocket = server.accept();
            ObjectOutputStream outToClient = new ObjectOutputStream (gatewaySocket.getOutputStream());
            ObjectInputStream inFromClient = new ObjectInputStream (gatewaySocket.getInputStream());
            
            while(!gatewaySocket.isClosed()){
                try {
                    waitForCommands(inFromClient,outToClient);
                } catch (IOException ex) {
                    //Logger.getLogger(ArCondicionadoFrame.class.getName()).log(Level.SEVERE, null, ex);
                    gatewaySocket.close();
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(ArCondicionadoFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
                
            }
                
            
            
            
            
            
        }
        
            
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtStatus = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtTemp = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Ubuntu", 1, 36)); // NOI18N
        jLabel1.setText("Ar Condicionado");

        jLabel2.setText("Status:");

        txtStatus.setText("jLabel3");

        jLabel3.setText("Temperatura:");

        txtTemp.setFont(new java.awt.Font("Ubuntu", 1, 14)); // NOI18N
        txtTemp.setForeground(new java.awt.Color(82, 137, 155));
        txtTemp.setText("jLabel4");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(120, 120, 120)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtStatus))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtTemp)))
                .addContainerGap(120, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtStatus))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtTemp))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ArCondicionadoFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ArCondicionadoFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ArCondicionadoFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ArCondicionadoFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ArCondicionadoFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel txtStatus;
    private javax.swing.JLabel txtTemp;
    // End of variables declaration//GEN-END:variables

    private void waitForCommands(ObjectInputStream in, ObjectOutputStream out) throws IOException, ClassNotFoundException {
        IoTAction action = (IoTAction) in.readObject();
            if(ac.performAction(action, out) == false){
                out.writeObject(new Message(Message.ERROR,"Invalid action for this device"));
            }
            
    }
}
