/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package iotbroker.devices;


import iotpackage.IoTAction;
import iotpackage.Message;
import iotpackage.OnTVValueChange;
import iotpackage.Television;
import java.awt.Color;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.ServerSocket;
import java.net.Socket;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author davi
 */
public class TelevisionFrame extends javax.swing.JFrame {

    /**
     * Creates new form TelevisionFrame
     */
    Television tv;
    public TelevisionFrame() {
        initComponents();
        tv = new Television("TV da sala", "Smart tv virtual para testes de IoT");
        tv.setCallback(new OnTVValueChange() {
            @Override
            public void volumeChanged(int newVolume) {
                lblVolume.setText(newVolume + "");
            }

            @Override
            public void channelChanged(int newChannel) {
                lblCanal.setText(newChannel + "");
            }

            @Override
            public void deviceStateChanged(boolean newValue) {
                if(newValue){
                    lblStatus.setText("Ligado");
                    lblStatus.setForeground(Color.GREEN);
                }
                else{
                    lblStatus.setText("Desligado");
                    lblStatus.setForeground(Color.RED);
                }
            }
        });
        tv.turnOn();
        tv.setChannel(22);
        Thread serverThread = new Thread(new Runnable() {
            @Override
            public void run() {
                serverStuff();
            }
        });
        serverThread.start();
    }
    
      private void serverStuff(){
        ServerSocket myServer;
        try {
            myServer = new ServerSocket(9092);
            System.out.println("Server on..");
        while(true){
            Socket gatewaySocket = myServer.accept();
            System.out.println("Connected");


            ObjectInputStream inFromGateway = null;
            ObjectOutputStream outToGateway = null;
            try {
                
                outToGateway = new ObjectOutputStream(gatewaySocket.getOutputStream());
                outToGateway.flush();
                inFromGateway = new ObjectInputStream(gatewaySocket.getInputStream());
            } catch (IOException ex) {
                Logger.getLogger(LightFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            
            while(!gatewaySocket.isClosed()){
                try {
                    if(inFromGateway != null || outToGateway != null)
                        waitForCommands(inFromGateway, outToGateway);
                }catch (IOException ex) {
                    gatewaySocket.close();
                    //Logger.getLogger(LightFrame.class.getName()).log(Level.SEVERE, null, ex);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(TelevisionFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
                
        }
        } catch (IOException ex) {
            Logger.getLogger(LightFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        lblStatus = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        lblCanal = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        lblVolume = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Ubuntu", 1, 36)); // NOI18N
        jLabel1.setText("Televisao");

        jLabel2.setText("Status:");

        lblStatus.setText("StatusTV");

        jLabel3.setText("Canal:");

        lblCanal.setText("CanalTV");

        jLabel4.setText("Volume:");

        lblVolume.setText("VolumeTV");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(120, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(113, 113, 113))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(24, 24, 24)
                                .addComponent(lblCanal))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lblVolume))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(lblStatus)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(lblStatus))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(lblCanal))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(lblVolume))
                .addContainerGap(170, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelevisionFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelevisionFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelevisionFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelevisionFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelevisionFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel lblCanal;
    private javax.swing.JLabel lblStatus;
    private javax.swing.JLabel lblVolume;
    // End of variables declaration//GEN-END:variables

    private void waitForCommands(ObjectInputStream in, ObjectOutputStream out) throws IOException, ClassNotFoundException {
        IoTAction action = (IoTAction) in.readObject();
            if(tv.performAction(action, out) == false){
                out.writeObject(new Message(Message.ERROR,"Invalid action for this device"));
            }
            
    }
}
